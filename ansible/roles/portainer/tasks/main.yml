---
- name: Generate admin password has
  set_fact:
    portainer_basic_auth: "{{ portainer.pass | password_hash('bcrypt') | replace('$', '$$') }}"

- name: Remove Portainer services
  docker_swarm_service:
    name: "{{ item }}"
    state: absent
  with_list:
    - portainer_agent
    - portainer_portainer

- name: Set up dev/prod labels
  set_fact:
    default_labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`{{ domain }}`) && PathPrefix(`/portainer`)"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.middlewares.portainer-redirectscheme.redirectscheme.scheme=https"
      - "traefik.http.middlewares.portainer-stripprefix.stripprefix.prefixes=/portainer"
      - "traefik.docker.network=traefik_net"
    dev_labels:
      - "traefik.http.routers.portainer.middlewares=portainer-stripprefix"
    prod_labels:
      - "traefik.http.routers.portainer.middlewares=portainer-redirectscheme,portainer-stripprefix"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.tls.certresolver=letsencrypt"
      - "traefik.http.routers.portainer.entrypoints=websecure"

- name: Deploy Portainer stack
  docker_stack:
    name: portainer
    state: present
    compose:
      - version: '3.2'
        services:
          agent:
            image: portainer/agent:2.15.1
            volumes:
              - /var/run/docker.sock:/var/run/docker.sock
              - /var/lib/docker/volumes:/var/lib/docker/volumes
            networks:
              - agent_net
            deploy:
              labels:
                - "traefik.enable=false"
              mode: global
              placement:
                constraints: [node.platform.os == linux]

          portainer:
            image: portainer/portainer-ce:2.15.1
            command: "-H tcp://tasks.agent:9001 --tlsskipverify --bind :{{ portainer.admin_port }} --tunnel-port {{ portainer.tunnel_port }} --admin-password {{ portainer_basic_auth }}"
            volumes:
              - "{{ dir.data }}:/data"
            networks:
              - agent_net
              - traefik_net
            deploy:
              labels:
                "{{ default_labels + prod_labels if production else default_labels + dev_labels }}"
              mode: replicated
              replicas: 1
              placement:
                constraints: [node.role == manager]

        networks:
          agent_net:
            driver: overlay
            attachable: true
          traefik_net:
            external: true
